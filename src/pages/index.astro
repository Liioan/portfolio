---
import Layout from "../layouts/Layout.astro";
import Heading from "../components/Heading.astro";
import Section from "../layouts/Section.astro";
import Toolbox from "../components/Toolbox.astro";
import MagneticButton from "../components/MagneticButton";
import Project from "../components/Project.astro";

export type projectType = {
  title: string;
  subtitle: string;
  description: string;
  github: string;
  website: string | null;
};

const projects: projectType[] = [
  {
    title: "Thundr",
    subtitle: "note app",
    description:
      "Thundr is a note app, created using T3 stack. There are different types of notes you can create, including markdown note, todo list and even decision tree.",
    github: "https://github.com/liioan/thundr",
    website: "https://thundr.vercel.app",
  },
  {
    title: "Hard Code Cafe",
    subtitle: "restaurant website",
    description:
      "This website was created as a school project. It is one of my first projects made with React. I used Framer Motion library for animations.",
    github: "https://github.com/liioan/hard-code-cafe",
    website: "https://hardcodecafe.netlify.app",
  },
  {
    title: "FeastBits",
    subtitle: "catering website",
    description:
      "FeastBits is another school project. It uses React on fontend, and Laravel on backend. I also used supabase for file storage.   ",
    github: "https://github.com/liioan/feastbits",
    website: null,
  },
];

type contactOption = { img: string; url: string };

const contactOptions: contactOption[] = [
  { img: "/twitter.png", url: "https://twitter.com/DavidBijok" },
  { img: "/messenger.png", url: "https://www.messenger.com/t/100014974624014" },
  { img: "/github.png", url: "https://github.com/liioan" },
  {
    img: "/linkedin.png",
    url: "https://www.linkedin.com/in/dawid-bijok-a83a95285/",
  },
];
---

<style is:global>
  @import url("https://fonts.googleapis.com/css2?family=Montserrat:wght@500;600;700&family=Source+Code+Pro:wght@600;700&display=swap");

  * {
    cursor: none !important;
  }

  .outline {
    outline: 4px solid rgba(0, 255, 0, 0.3);
  }

  body:has(.hide-cursor:hover) .cursor {
    opacity: 0;
  }
  body:has(.hide-cursor:hover) .cursor2 {
    opacity: 0;
  }

  body::-webkit-scrollbar {
    display: none;
  }
</style>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";
  gsap.registerPlugin(ScrollTrigger);

  const heroItems = document.querySelectorAll(".hero-text");

  heroItems.forEach((item, i) => {
    gsap.from(item, {
      delay: 0.5 + 0.25 * i,
      duration: 0.5,
      opacity: 0,
      x: -100,
      stagger: 0.25,
      ease: "power3",
    });
  });

  gsap.from(".about-me-text", {
    scrollTrigger: {
      trigger: "#about",
      start: "top 60%",
      end: "bottom 40%",
      scrub: true,
    },
    opacity: 0,
    x: -100,
    ease: "power3",
  });

  gsap.from(".my-face", {
    scrollTrigger: {
      trigger: "#about",
      start: "top 40%",
      end: "bottom 60%",
      scrub: true,
    },
    opacity: 0,
    x: 100,
    ease: "power3",
  });

  const headings = ["about", "toolbox", "projects", "contact"];

  headings.forEach((heading) => {
    gsap.from(`#${heading}-heading`, {
      scrollTrigger: {
        trigger: `#${heading}`,
        start: "top 80%",
        end: "bottom 20%",
        scrub: true,
      },
      opacity: 0,
      y: -100,
      ease: "power3",
    });
  });

  const projects = document.querySelectorAll(".project");

  projects.forEach((project, i) => {
    gsap.from(project, {
      scrollTrigger: {
        trigger: `#projects`,
        start: `top ${80 * (i * 0.25)}%`,
        end: `bottom 80%`,
        scrub: true,
      },
      opacity: 0,
      x: -100,
      ease: "power3",
    });
  });

  gsap.from(".github", {
    scrollTrigger: {
      trigger: `#projects`,
      start: `50% 50%`,
      end: `bottom 50%`,
      scrub: true,
    },
    opacity: 0,
    y: 100,
    ease: "power3",
  });

  gsap.from(".contact-text", {
    scrollTrigger: {
      trigger: `#contact`,
      start: `-20% 50%`,
      end: `40% 50%`,
      scrub: true,
    },
    opacity: 0,
    x: -100,
    ease: "power3",
  });

  gsap.from(".contact-links", {
    scrollTrigger: {
      trigger: `#contact`,
      start: `-20% 50%`,
      end: `45% 50%`,
      scrub: true,
    },
    opacity: 0,
    y: 100,
    ease: "power3",
  });
</script>

<Layout title="David Bijok">
  <main
    class="relative flex h-screen items-center justify-center before:absolute before:left-0 before:-z-10 before:h-full before:w-full before:animate-fadeIn before:bg-[url('/hero_gradient.png')] before:bg-cover before:bg-center before:bg-no-repeat before:content-[''] after:absolute after:left-0 after:top-0 after:-z-10 after:h-full after:w-full after:bg-[url('/waves.png')] after:bg-cover after:bg-center after:content-[''] lg:before:bg-contain xl:justify-start xl:px-[220px]"
  >
    <header
      class="before:animate-fadeIn2 after:animate-fadeIn2 relative -translate-y-10 text-text before:absolute before:left-0 before:-translate-x-3 before:-translate-y-4 before:font-content before:opacity-50 before:content-['<h1>'] after:absolute after:right-0 after:translate-x-3 after:font-content after:opacity-50 after:content-['</h1>'] lg:before:-translate-x-[52px] lg:after:left-0 lg:after:-translate-x-14"
    >
      <h1
        class="before:animate-line relative flex flex-col justify-center font-bold before:absolute before:hidden before:h-[85%] before:w-[2px] before:-translate-x-8 before:bg-white before:opacity-50 before:content-[''] lg:before:block"
      >
        <span class="hero-text text-[32px] sm:text-[44px] lg:text-[64px]">
          Hi!</span
        >
        <span class="hero-text text-[48px] sm:text-[76px] lg:text-[96px]">
          I'm David,</span
        >
        <span class="hero-text text-[32px] sm:text-[44px] lg:text-[64px]">
          a frontend developer</span
        >
      </h1>
    </header>
  </main>
  <Section id="about" height="min">
    <Heading id="about-heading">About</Heading>
    <div
      class="flex flex-col items-center justify-center gap-20 2xl:flex-row 2xl:gap-60"
    >
      <p
        class="about-me-text w-[80%] max-w-[850px] text-center font-content text-lg font-semibold text-text md:text-2xl lg:text-left"
      >
        I am a passionate Web Developer and Designer based in Poland. I started
        coding in the summer of 2022. Since then, I have designed and built a
        few apps and websites from scratch using various tools and technologies.
        Although I am primarily a frontend engineer, I have experience in
        backend development.
      </p>
      <div
        class="my-face relative z-10 flex aspect-square max-h-[425px] w-[80%] max-w-[425px] items-center justify-center after:absolute after:left-0 after:top-0 after:-z-10 after:h-full after:w-full after:rotate-[-70deg] after:scale-125 after:bg-[url('/gradient.png')] after:bg-cover after:bg-center after:opacity-70 after:content-[''] lg:min-h-[425px] lg:min-w-[425px] 2xl:after:h-[1200px] 2xl:after:w-[1200px] 2xl:after:-translate-x-[450px] 2xl:after:-translate-y-[450px] 2xl:after:scale-75"
      >
        <img
          src="/profile_picture.png"
          alt="my profile picture"
          class="aspect-square w-[80%] lg:min-h-[425px] lg:min-w-[425px]"
        />
      </div>
    </div>
  </Section>
  <Section id="toolbox">
    <Heading id="toolbox-heading">Toolbox</Heading>
    <div class="flex w-full items-center justify-center 2xl:mt-[85px]">
      <Toolbox />
    </div>
  </Section>
  <Section id="projects" className="2xl:gap-[10px]">
    <Heading id="projects-heading">Projects</Heading>
    <div
      class="relative flex w-full flex-col items-center justify-center gap-[30px] after:absolute after:left-0 after:top-0 after:-z-10 after:h-full after:w-full after:-translate-y-[250px] after:scale-110 after:bg-[url('/gradient.png')] after:bg-contain after:bg-center after:bg-no-repeat after:opacity-40 after:content-[''] lg:flex-row lg:flex-wrap lg:gap-[20px] 2xl:mt-[85px] 2xl:after:-translate-x-[200px] 2xl:after:translate-y-[100px] 2xl:after:scale-150"
    >
      {projects.map((project) => <Project project={project} />)}
    </div>
    <p
      class="github mt-4 w-[80%] text-center font-content text-[20px] font-semibold text-white lg:w-full 2xl:mt-8"
    >
      If you want to see more of my projects, head to my <a
        href="https://github.com/liioan"
        class="text-primary">github</a
      > profile
    </p>
  </Section>
  <Section
    id="contact"
    className="relative after:absolute after:right-0 after:top-0 after:-z-10 after:h-full after:w-full after:-translate-y-[250px] after:scale-150 after:bg-[url('/gradient.png')] after:bg-contain after:bg-center after:bg-no-repeat after:opacity-40 after:content-[''] 2xl:after:translate-x-[500px] 2xl:after:translate-y-[100px]"
    height="min"
  >
    <Heading id="contact-heading">Contact</Heading>
    <p
      class="contact-text w-[70%] max-w-2xl text-center font-content text-lg font-semibold text-text md:text-2xl xl:text-left 2xl:mt-16"
    >
      Got an exciting project? Reach out via email or instant message for a
      quick connection! Let's make it a success.
    </p>
    <div
      class="contact-links flex flex-col items-center justify-center gap-[25px] lg:flex-row 2xl:mt-20"
    >
      <MagneticButton
        className="hide-cursor h-14 w-40 rounded-[10px] border-2 border-primary bg-background text-2xl font-bold text-white transition-colors duration-200 hover:bg-primary hover:text-black"
        client:only
      >
        <a href="mailto:dev.davidbijok@gmail.com">email</a>
      </MagneticButton>
      <div class="flex items-center justify-center gap-[25px]">
        {
          contactOptions.map((option) => (
            <MagneticButton
              className="icon hide-cursor flex h-[50px] w-[50px] items-center justify-center rounded-full opacity-50 transition-colors duration-200 hover:bg-primary hover:opacity-100"
              client:only
            >
              <a href={option.url}>
                <img src={option.img} alt="" />
              </a>
            </MagneticButton>
          ))
        }
      </div>
    </div>
  </Section>
</Layout>
